{"version":3,"sources":["../src/003-let.js"],"names":["a","i","console","log","b","j","k","temp","bar","x","y","h","fn1","arg","fn2"],"mappings":";;;;AAAA;AAEA;AACA;AACA,IAAIA,CAAC,GAAG,EAAR;;AACA,KAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,EAAnB,EAAuBA,CAAC,EAAxB,EAA4B;AACxBD,EAAAA,CAAC,CAACC,CAAD,CAAD,GAAO,YAAU;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH,GAFD;AAGH,C,CACD;;;AACAD,CAAC,CAAC,CAAD,CAAD,G,CAEA;;AACA,IAAII,CAAC,GAAG,EAAR;;2BACQC,C;AACJD,EAAAA,CAAC,CAACC,CAAD,CAAD,GAAO,YAAU;AACbH,IAAAA,OAAO,CAACC,GAAR,CAAYE,CAAZ;AACH,GAFD;;;AADJ,KAAI,IAAIA,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,EAAnB,EAAuBA,CAAC,EAAxB,EAA2B;AAAA,QAAnBA,CAAmB;AAI1B,C,CACD;;;AACAD,CAAC,CAAC,CAAD,CAAD,G,CAEA;;AACA,KAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA2B;AACvB,MAAIA,EAAC,GAAG,KAAR;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAYG,EAAZ;AACH,C,CAED;AACA;;;AACA,IAAIC,IAAI,GAAG,GAAX;;AAEA,IAAG,IAAH,EAAQ;AACJ;AACA;AACA;AAEA,MAAIA,KAAJ,CALI,CAKQ;;;AACZL,EAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ,EANI,CAMgB;;AACpBA,EAAAA,KAAI,GAAG,OAAP;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACH,C,CAED;;;AACA;AACI;AACA,MAAIA,MAAJ;;AACAA,EAAAA,MAAI,GAAG,OAAP;AACAL,EAAAA,OAAO,CAACC,GAAR,SAAmBI,MAAnB;AACH,C,CAED;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,SAASC,GAAT,GAAuB;AAAA,MAAVC,CAAU,uEAAP,CAAO;AAAA,MAAJC,CAAI,uEAAFD,CAAE;AACnB,SAAM,CAACA,CAAD,EAAIC,CAAJ,CAAN;AACH;;AACDR,OAAO,CAACC,GAAR,CAAYK,GAAG,EAAf,E,CAEA;;AACA,IAAIG,CAAC,GAAGA,CAAR,C,CAEA;AACA;AAEA;;AACA,SAASC,GAAT,CAAaC,GAAb,EAAiB,CACb;AACH;;AACDD,GAAG;;AAEH,SAASE,GAAT,CAAaD,GAAb,EAAiB;AACb;AACI,QAAIA,IAAJ;AACH;AACJ;;AACDC,GAAG","sourcesContent":["// * ch2. let and const\n\n// ? EX.1 in for loop\n// * 1.1. index i is declared by var\nlet a = [];\nfor(var i = 0; i < 10; i ++){\n    a[i] = function(){\n        console.log(i);\n    };\n}\n// ! any element in a output global variable i\na[6]();\n\n// * 1.2. index i is declared by let\nlet b = [];\nfor(let j = 0; j < 10; j++){\n    b[j] = function(){\n        console.log(j);\n    };\n}\n// ! elements in b outputs local variable j\nb[6]();\n\n// * 1.3. for loop condition is a parent scope, for loop statement is a child scope\nfor (let k = 0; k < 3; k++){\n    let k = 'abc';\n    console.log(k);\n}\n\n// ? Ex.2 let binding the variable to its current local block scope\n// * 2.1. TDZ starts and ends\nlet temp = 123;\n\nif(true){\n    // ! TDZ starts\n    // temp = 'abc';    // ! ReferenceError: Cannot access 'temp' before initialization\n    // console.log(temp);   // ! ReferenceError: Cannot access 'temp' before initialization\n\n    let temp;   // ! TDZ ends\n    console.log(temp);  // ! undefined\n    temp = \"hello\";\n    console.log(temp); \n}\n\n// * 2.2. typeof is not always safe any longer\n{\n    // typeof temp; // ! ReferenceError: Cannot access 'temp' before initialization\n    let temp;\n    temp = \"hello\";\n    console.log(typeof temp);\n}\n\n// * 2.3. examples of not-so obivoud TDZ\n// ! Error\n// function bar(x=y, y=2){  // ! ReferenceError: Cannot access 'temp' before initialization\n//     return [x, y]\n// }\n// bar();\n\n// * correct\nfunction bar(x =2, y=x){\n    return[x, y];\n}\nconsole.log(bar());\n\n// * correct\nvar h = h;\n\n// ! Error\n// let g = g; // ! ReferenceError: Cannot access 'temp' before initialization\n\n// ? Ex.3 Cannot re-declare same variable in same scope\nfunction fn1(arg){\n    // let arg;    // ! ReferenceError: Cannot access 'temp' before initialization\n}   \nfn1();\n\nfunction fn2(arg){\n    {\n        let arg;\n    }\n}\nfn2();\n"],"file":"003-let.js"}